#!/usr/bin/env ruby

require "prawn"
require "prawn/measurement_extensions"
require "trollop"


def generateMovementTray(rows, cols, filename, base)

    pdf = Prawn::Document.new

    pdf.text "Paper Movement Tray"
    pdf.stroke_horizontal_rule
    pdf.move_down 10
    pdf.text "#{base}mm bases, #{rows}x#{cols}."
    pdf.text "Generated by Luke's Movement Tray script"
    pdf.text "mt.rb (c) Luke Maciak"

    pdf.move_down 30
    pdf.text "Cut along the lines below:"

    y = 100
    x = 0
    
    rows.times do
        cols.times do |i|
            
            pdf.stroke do
                pdf.rectangle [x,y], base.mm, base.mm
            end

            x += base.mm
        end
        x = 0
        y += base.mm
    end

    pdf.render_file filename
end


 opts = Trollop::options do
    version "mt.rb 0.1 (c) Luke Maciak 2013"
    banner <<-EOS
Luke's Movement Tray Tool

This tool generates a printable movement tray for war games which
use 20 or 25mm square bases. The tray is generated as a PDF file.

To generate your tray please provide how many --rows and --cols you
want to have in your unit. Use the --large switch to use the larger
25mm bases (the default is 20mm).

Usage:
        mt.rb --rows 5 --cols 5 --file tray.pdf

The above will generate a 5x5 tray using 20mm bases and save it into
file named tray.pdf in the current directory.

Command line arguments:
    
    EOS
    opt :rows, "Number of rows", :short => "-r", :type => :int
    opt :cols, "Number of collumns", :short => "-c", :type => :int
    opt :file, "Output file", :short => "-f", :type => :string
    opt :large, "Use 25mm base size instead of 20mm", :short => "-l"
 end

Trollop::die :rows, "cannot be left blank" if opts[:rows] == nil
Trollop::die :cols, "cannot be left blank" if opts[:cols] == nil
Trollop::die :file, "cannot be left blank" if opts[:file] == nil
Trollop::die :file, "must end in .pdf" if !opts[:file].end_with?(".pdf")


rows = opts[:rows]
cols = opts[:cols]
filename = opts[:file]

if opts[:large] 
    base = 25 
    r_max = 8
    c_max = 8
else 
    base = 20  
    r_max = 10
    c_max = 10
end

if (rows<1 or rows>r_max) then abort("For #{base}mm base rows argument must be in the range of 1-#{r_max}") end
if (cols<1 or cols>c_max) then abort("For #{base}mm base cols argument must be in the range of 1-#{c_max}") end


puts "Building a movement tray..."
puts "Base size is #{base}mm"
puts "Tray size: #{rows}x#{cols}"

generateMovementTray(rows,cols, filename, base)

puts "Generated movement tray in #{filename}"
